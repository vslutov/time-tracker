{"version":3,"sources":["Navbar/component.js","Form/index.js","Tracker/flux.js","Tracker/container.js","Tracker/component.js","Settings/helpers.js","Settings/component.js","Settings/flux.js","Settings/container.js","App/component.js","App/flux.js","Tracker/epics.js","serviceWorker.js","index.js","App/container.js","Form/Form.module.css"],"names":["NavbarComponent","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","react_default","a","createElement","Navbar","color","light","expand","Container","react_router_dom","to","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","InputHelper","_ref","_ref$type","type","_ref$className","_ref2","input","meta","react","Input","assign","id","name","touched","error","Alert","dirtySinceLastSubmit","submitError","InputText","InputPassword","InputTextarea","styles","textarea","FormGroup","_ref3","label","component","validate","es_FormGroup","row","Label","htmlFor","sm","Col","react_final_form_es","Form","_ref4","onSubmit","initialValues","children","_ref4$submitText","submitText","_ref4$allowPristine","allowPristine","render","_ref5","handleSubmit","errors","pristine","disabled","objectWithoutProperties","keys","length","es_Form","size","offset","Button","outline","Checkmark","width","height","OnBlurState","_ref6","active","previous","setPrevious","value","OnBlur","_ref7","subscription","props","Form_OnBlurState","createFlux","prefix","defaultValues","startTime","completeTime","message","editedMessage","setActions","trackerReducer","defaultSelectors","actions","objectSpread","startWork","setStartTime","Date","completeWork","setCompleteTime","continueWork","reset","setMessage","setEditedMessage","Tracker","connect","applySelectors","selectors","bindActionCreators","resetConfirming","setResetConfirming","beginReset","Fragment","Row","Close","CaretRight","Form_Form","Form_FormGroup","Form_OnBlur","ArrowLeft","Reload","issueUrlRegexp","RegExp","getIssueInfo","url","match","_match","origin","namespace","project","projectId","concat","ValidationError","_Error","info","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","constructor","Error","captureStackTrace","assertThisInitialized","inherits","wrapNativeSuper","getIssueTitle","asyncToGenerator","regenerator_default","mark","_callee","issueUrl","token","issueInfo","response","title","wrap","_context","prev","next","fetch","headers","PRIVATE-TOKEN","sent","console","log","status","ok","FORM_ERROR","json","abrupt","stop","_x","apply","arguments","validateIssueUrl","getTitleAndSave","saveSettings","issueTitle","t0","settingsReducer","_saveSettings","setIssueUrl","setToken","setIssueTitle","createSelector","Settings","component_getTitleAndSave","component_validateIssueUrl","AppComponent","component_NavbarComponent","react_router","path","rootEpic","combineEpics","action$","state$","pipe","ofType","map","payload","preSpentMinutes","Math","ceil","spentHours","floor","spentMinutes","startDay","ts","year","getFullYear","month","getMonth","date","getDate","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","history","createBrowserHistory","store","preloadedState","epicMiddleware","createEpicMiddleware","reduxMiddlewares","persistState","applyMiddleware","batch","routerMiddleware","rootReducer","batching","combineReducers","router","connectRouter","tracker","settings","createRootReducer","createReduxStore","run","createStore","ReactDOM","index_esm","es","esm","component_AppComponent","src_history","src_store","document","getElementById","URL","process","href","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.344e6935.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Navbar, Container, NavbarToggler, Collapse, Nav, NavItem } from 'reactstrap'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport const NavbarComponent = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return pug`\n    Navbar(color=\"light\",light,expand=\"md\")\n      Container\n        Link.navbar-brand(to=process.env.PUBLIC_URL + \"/\") Time tracker\n\n        NavbarToggler(onClick=toggle)\n\n        Collapse(isOpen=isOpen navbar)\n          Nav(navbar): NavItem\n            NavLink.nav-link(to=(process.env.PUBLIC_URL + \"/settings\")) Settings\n  `\n}\n","import React, { useState, Fragment } from 'react'\nimport { Input, Alert, FormGroup as BSFormGroup, Label, Col, Form as BSForm, Button } from 'reactstrap'\nimport { Field, Form as FinalForm } from 'react-final-form'\nimport { Checkmark } from '@vslutov/react-bytesize-icons'\n\nimport styles from './Form.module.css'\n\nconst InputHelper = ({ type = 'text', className = '' }) => ({ input, meta }) => (\n  <Fragment>\n    <Input type={type} id={input.name} {...input} className={className} />\n    {meta.touched && meta.error && <Alert color='danger'>{meta.error}</Alert>}\n    {!meta.dirtySinceLastSubmit && meta.submitError && <Alert color='danger'>{meta.submitError}</Alert>}\n  </Fragment>\n)\n\nexport const InputText = InputHelper({ type: 'text' })\nexport const InputPassword = InputHelper({ type: 'password' })\nexport const InputTextarea = InputHelper({ type: 'textarea', className: styles.textarea })\n\nexport const FormGroup = ({ label, component, name, validate }) => pug`\n  BSFormGroup(row)\n    Label(for=name sm=2)= label\n\n    Col(sm=10)\n      Field(name=name component=component validate=validate)\n`\n\nexport const Form = ({ onSubmit, initialValues, children, submitText = '', allowPristine = false }) => {\n  const FormComponent = ({ handleSubmit, errors, pristine, ...args }) => {\n    const invalid = Object.keys(errors).length > 0\n    const disabled = invalid || (pristine && !allowPristine)\n\n    return pug`\n      BSForm(onSubmit=handleSubmit)\n        = children\n\n        if submitText.length > 0\n          BSFormGroup(row)\n            Col(sm={ size: 10, offset: 2 })\n              Button(outline color=\"primary\" type=\"submit\" disabled=disabled)\n                Checkmark(width=24 height=24)\n                = ' ' + submitText\n    `\n  }\n\n  return pug`\n    FinalForm(onSubmit=onSubmit initialValues=initialValues render=FormComponent)\n  `\n}\n\nconst OnBlurState = ({ meta: { active }, input, render }) => {\n  const [previous, setPrevious] = useState(active)\n\n  if (previous && !active) {\n    render(input.value)\n  }\n\n  if (previous !== active) {\n    setPrevious(active)\n  }\n\n  return null\n}\n\nexport const OnBlur = ({ name, render }) => {\n  const compile = props => {\n    return <OnBlurState {...props} render={render} />\n  }\n\n  const subscription = {\n    active: true,\n    value: true\n  }\n\n  return pug`\n    Field(name=name subscription=subscription render=compile)\n  `\n}\n","import { createFlux } from '@vslutov/redux-flux'\n\nconst { setActions, trackerReducer, defaultSelectors } = createFlux({\n  prefix: 'TRACKER',\n  defaultValues: {\n    startTime: null,\n    completeTime: null,\n    message: '',\n    editedMessage: ''\n  }\n})\n\nexport const actions = {\n  ...setActions,\n  startWork: () => (\n    setActions.setStartTime(+new Date())\n  ),\n  completeWork: () => (\n    setActions.setCompleteTime(+new Date())\n  ),\n  continueWork: () => (\n    setActions.setCompleteTime(null)\n  ),\n  reset: () => ([\n    setActions.setStartTime(null),\n    setActions.setCompleteTime(null),\n    setActions.setMessage(''),\n    setActions.setEditedMessage('')\n  ])\n}\nexport { defaultSelectors as selectors }\nexport { trackerReducer }\n","import { connect } from 'react-redux'\nimport { applySelectors, bindActionCreators } from '@vslutov/redux-flux'\n\nimport { TrackerComponent } from './component'\nimport { selectors, actions } from './flux'\n\nexport const Tracker = connect(applySelectors(selectors), bindActionCreators(actions))(TrackerComponent)\n","import React, { useState } from 'react'\nimport { CaretRight, Checkmark, Reload, ArrowLeft, Close } from '@vslutov/react-bytesize-icons'\nimport { Button, Row, Col, FormGroup as BSFormGroup } from 'reactstrap'\n\nimport { InputTextarea, FormGroup, Form, OnBlur } from '../Form'\n\nexport const TrackerComponent = ({ startWork, startTime, message, setMessage, completeWork, completeTime, reset, continueWork, editedMessage, setEditedMessage }) => {\n  const [resetConfirming, setResetConfirming] = useState(false)\n  const beginReset = () => setResetConfirming(true)\n\n  if (resetConfirming) {\n    const cancelReset = () => setResetConfirming(false)\n    const confirmReset = () => {\n      reset()\n      setResetConfirming(false)\n    }\n\n    return pug`\n      Row\n        Col\n          p Are you sure want reset progress? This action cannot be undone.\n\n      Row\n        Col\n          Button(outline color=\"secondary\" onClick=cancelReset)\n            Close(width=24 height=24)\n            |  Cancel\n\n          Button(outline color=\"danger\" onClick=confirmReset).ml-2\n            Checkmark(width=24 height=24)\n            |  Reset progress\n    `\n  }\n\n  if (startTime == null) {\n    return pug`\n      Row\n        Col\n          Button(outline color=\"primary\" onClick=startWork)\n            CaretRight(width=24 height=24)\n            |  Start work session\n    `\n  }\n\n  if (completeTime != null) {\n    const submit = () => null\n\n    return pug`\n      Form(onSubmit=submit initialValues={editedMessage})\n        FormGroup(label=\"Edit message, if needed\" component=InputTextarea name=\"editedMessage\")\n\n        OnBlur(name=\"editedMessage\" render=setEditedMessage)\n\n        BSFormGroup(row)\n          Col(sm={ size: 10, offset: 2 })\n            Button(color=\"primary\" outline type=\"submit\")\n              Checkmark(width=24 height=24)\n              | Commit workday\n\n            Button(color=\"secondary\" outline onClick=continueWork).ml-2\n              ArrowLeft(width=24 height=24)\n              | Continue work\n\n            Button(color=\"danger\" outline onClick=beginReset).ml-2\n              Reload(width=24 height=24)\n              | Reset progress\n    `\n  }\n\n  return pug`\n    Form(onSubmit=completeWork initialValues={message})\n      FormGroup(label=\"Write there the tasks, which you have done by the day\" component=InputTextarea name=\"message\")\n\n      OnBlur(name=\"message\" render=setMessage)\n\n      BSFormGroup(row)\n        Col(sm={ size: 10, offset: 2 })\n          Button(color=\"primary\" outline type=\"submit\")\n            Checkmark(width=24 height=24)\n            |  Finish workday\n\n          Button(color=\"danger\" outline onClick=beginReset).ml-2\n            Reload(width=24 height=24)\n            |  Reset progress\n  `\n}\n","import fetch from 'cross-fetch'\n\nexport const issueUrlRegexp = new RegExp('^(https?://[^/]+)/([^/]+)/([^/]+)/issues/([0-9]+)$')\n\nexport const getIssueInfo = url => {\n  const match = url.match(issueUrlRegexp)\n  if (match == null) {\n    return null\n  }\n\n  const [, origin, namespace, project, id] = match\n\n  return {\n    origin,\n    projectId: `${namespace}%2F${project}`,\n    id\n  }\n}\n\nexport class ValidationError extends Error {\n  constructor (message, info) {\n    // Calling parent constructor of base Error class.\n    super(message)\n\n    // Saving class name in the property of our custom error as a shortcut.\n    this.name = this.constructor.name\n\n    // Capturing stack trace, excluding constructor call from it.\n    Error.captureStackTrace(this, this.constructor)\n\n    // You can use any additional properties you want.\n    // I'm going to use preferred HTTP status for this error types.\n    // `500` is the default value if not specified.\n    this.info = info || 500\n  }\n}\n\nexport const getIssueTitle = async ({ issueUrl, token }) => {\n  const issueInfo = getIssueInfo(issueUrl)\n  if (issueInfo == null) {\n    throw new ValidationError('Invalid issue url', {\n      issueUrl: 'Invalid issue url'\n    })\n  }\n\n  const { origin, projectId, id } = issueInfo\n\n  const response = await fetch(`${origin}/api/v4/projects/${projectId}/issues/${id}`, {\n    headers: {\n      'PRIVATE-TOKEN': token\n    }\n  })\n\n  console.log(response)\n  if (response.status === 404) {\n    throw new ValidationError('Cannot find an issue', {\n      issueUrl: 'Cannot find an issue'\n    })\n  } else if (response.status === 401) {\n    throw ValidationError('Invalid token', {\n      token: 'Invalid token'\n    })\n  } else if (!response.ok) {\n    throw new ValidationError('Some internal error', {\n      FORM_ERROR: 'Some internal error'\n    })\n  }\n\n  const { title } = await response.json()\n\n  return title\n}\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\n\nimport { InputPassword, InputText, FormGroup, Form } from '../Form'\n\nimport { issueUrlRegexp, getIssueTitle, ValidationError } from './helpers'\n\nconst validateIssueUrl = (url) => {\n  const result = url.match(issueUrlRegexp)\n  if (result == null) {\n    return \"It isn't a valid issue url.\"\n  }\n}\n\nconst getTitleAndSave = saveSettings => async ({ issueUrl, token }) => {\n  try {\n    const issueTitle = await getIssueTitle({ issueUrl, token })\n    await saveSettings({ issueUrl, token, issueTitle })\n  } catch (error) {\n    if (error instanceof ValidationError) {\n      return error\n    }\n    throw error\n  }\n}\n\nexport const SettingsComponent = ({ issueUrl, token, saveSettings, issueTitle }) => {\n  const initialValues = {\n    issueUrl,\n    token\n  }\n\n  return pug`\n    Row.mb-3\n      Col(sm=2) Current issue\n      Col(sm=10)= issueTitle\n\n    Form(onSubmit=getTitleAndSave(saveSettings) initialValues=initialValues submitText=\"Save\")\n      FormGroup(label=\"Gitlab token\" component=InputPassword name=\"token\")\n\n      FormGroup(label=\"Gitlab issue url\" component=InputText name=\"issueUrl\" validate=validateIssueUrl)\n  `\n}\n","import { createFlux } from '@vslutov/redux-flux'\nimport { createSelector } from 'reselect'\n\nimport { getIssueInfo } from './helpers'\n\nconst { setActions, settingsReducer, defaultSelectors } = createFlux({\n  prefix: 'SETTINGS',\n  defaultValues: {\n    issueUrl: '',\n    token: '',\n    issueTitle: ''\n  }\n})\n\nexport const actions = {\n  ...setActions,\n  saveSettings: async ({ issueUrl, token, issueTitle }) => {\n    return [\n      setActions.setIssueUrl(issueUrl),\n      setActions.setToken(token),\n      setActions.setIssueTitle(issueTitle)\n    ]\n  }\n}\nexport const selectors = {\n  ...defaultSelectors,\n  issueInfo: createSelector(defaultSelectors.issueUrl, getIssueInfo)\n}\n\nexport { settingsReducer }\n","import { connect } from 'react-redux'\nimport { applySelectors, bindActionCreators } from '@vslutov/redux-flux'\n\nimport { SettingsComponent } from './component'\nimport { selectors, actions } from './flux'\n\nexport const Settings = connect(applySelectors(selectors), bindActionCreators(actions))(SettingsComponent)\n","import React from 'react'\nimport { Container } from 'reactstrap'\nimport { Switch, Route } from 'react-router'\n\nimport { Navbar } from '../Navbar'\nimport { Tracker } from '../Tracker'\nimport { Settings } from '../Settings'\n\nexport const AppComponent = () => (\n  pug`\n    Navbar\n    Container.mt-3\n      Switch\n        Route(path=(process.env.PUBLIC_URL + \"/settings\") component=Settings)\n        Route(component=Tracker)\n  `\n)\n","import { createStore as createReduxStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport { routerMiddleware } from '@vslutov/router-middleware'\nimport { batch, batching } from 'redux-batch-middleware'\nimport persistState from 'redux-localstorage'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\n\nimport { trackerReducer } from '../Tracker/flux'\nimport { settingsReducer } from '../Settings/flux'\n\nimport { trackerEpic } from '../Tracker/epics'\n\nconst rootEpic = combineEpics(\n  trackerEpic\n)\n\nconst createRootReducer = history => batching(combineReducers({\n  router: connectRouter(history),\n  tracker: trackerReducer,\n  settings: settingsReducer\n}))\n\nconst composeEnhancers = (window != null && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nexport const createStore = ({ history, preloadedState }) => {\n  const epicMiddleware = createEpicMiddleware()\n\n  const reduxMiddlewares = composeEnhancers(\n    persistState(),\n    applyMiddleware(\n      epicMiddleware,\n      batch,\n      routerMiddleware(history)\n    )\n  )\n\n  const rootReducer = createRootReducer(history)\n\n  const store = (() => {\n    if (preloadedState != null) {\n      return createReduxStore(rootReducer, preloadedState, reduxMiddlewares)\n    } else {\n      return createReduxStore(rootReducer, reduxMiddlewares)\n    }\n  })()\n\n  epicMiddleware.run(rootEpic)\n\n  return store\n}\n","import { ofType } from '@vslutov/of-type'\nimport { map } from 'rxjs/operators'\n\nimport { actions, selectors } from './flux'\n\nconst getDate = ts => {\n  const year = ts.getFullYear()\n  const month = `${Math.floor(ts.getMonth() / 10)}${ts.getMonth() % 10}`\n  const date = `${Math.floor(ts.getDate() / 10)}${ts.getDate() % 10}`\n  return `${year}-${month}-${date}`\n}\n\nexport const trackerEpic = (action$, state$) => action$.pipe(\n  ofType(actions.setCompleteTime),\n  map(({ payload: completeTime }) => {\n    const startTime = selectors.startTime(state$.value)\n    const message = selectors.message(state$.value)\n\n    const preSpentMinutes = Math.ceil((completeTime - startTime) / (10 * 60 * 1000)) * 10\n    const spentHours = Math.floor(preSpentMinutes / 60)\n    const spentMinutes = preSpentMinutes - 60 * spentHours\n\n    const startDay = getDate(new Date(startTime))\n\n    const editedMessage = `${message}\\n/spend ${spentHours}h${spentMinutes}m ${startDay}`\n\n    return actions.setEditedMessage(editedMessage)\n  })\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nimport fetch from 'cross-fetch'\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { App } from './App'\nimport { createStore } from './App/flux'\nimport { register } from './serviceWorker'\n\nconst history = createBrowserHistory()\nconst store = createStore({ history })\n\nReactDOM.render(pug`App(history=history, store=store)`, document.getElementById('root'))\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregister()\n","import React from 'react'\nimport { HeadProvider } from 'react-head'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport { AppComponent } from './component'\n\nexport const App = ({ store, history }) => pug`\n  HeadProvider\n    Provider(store=store)\n      ConnectedRouter(history=history)\n        AppComponent\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Form_textarea__3Z_Hf\"};"],"sourceRoot":""}